global:
  logLevel: 2
installCRDs: true
replicaCount: 1

featureGates: ""

image:
  repository: quay.io/jetstack/cert-manager-controller
  pullPolicy: IfNotPresent

namespace: "cert-manager"

serviceAccount:
  create: true
  name: "cart-manager-serviceaccount"
  automountServiceAccountToken: true
enableCertificateOwnerRef: true

config: {}

dns01RecursiveNameservers: ""

dns01RecursiveNameserversOnly: false

extraArgs: []

extraEnv: []
resources: {}

securityContext:
  runAsNonRoot: true
  seccompProfile:
    type: RuntimeDefault

containerSecurityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true

volumes: []
volumeMounts: []

podLabels: {}

nodeSelector:
  kubernetes.io/os: linux

ingressShim: {}
affinity: {}
tolerations: []
topologySpreadConstraints: []

livenessProbe:
  enabled: true
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 15
  successThreshold: 1
  failureThreshold: 8

enableServiceLinks: false

prometheus:
  enabled: true
  servicemonitor:
    enabled: false
    prometheusInstance: default
    targetPort: 9402
    path: /metrics
    interval: 60s
    scrapeTimeout: 30s
    labels: {}
    annotations: {}
    honorLabels: false
    endpointAdditionalProperties: {}
  podmonitor:
    enabled: false
    prometheusInstance: default
    path: /metrics
    interval: 60s
    scrapeTimeout: 30s
    labels: {}
    annotations: {}
    honorLabels: false
    endpointAdditionalProperties: {}
webhook:
  replicaCount: 1
  timeoutSeconds: 30
  config: {}
  strategy: {}
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault

  containerSecurityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: true

  podDisruptionBudget:
    enabled: false
  validatingWebhookConfiguration:
    namespaceSelector:
      matchExpressions:
        - key: "cert-manager.io/disable-validation"
          operator: "NotIn"
          values:
            - "true"

  mutatingWebhookConfiguration:
    namespaceSelector: {}
  extraArgs: []
  featureGates: ""

  resources: {}

  livenessProbe:
    failureThreshold: 3
    initialDelaySeconds: 60
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1

  readinessProbe:
    failureThreshold: 3
    initialDelaySeconds: 5
    periodSeconds: 5
    successThreshold: 1
    timeoutSeconds: 1

  nodeSelector:
    kubernetes.io/os: linux

  affinity: {}

  tolerations: []

  topologySpreadConstraints: []

  podLabels: {}

  serviceLabels: {}

  image:
    repository: quay.io/jetstack/cert-manager-webhook
    pullPolicy: IfNotPresent

  serviceAccount:
    create: true
    automountServiceAccountToken: true

  securePort: 10250
  hostNetwork: false
  serviceType: ClusterIP
  url: {}
  networkPolicy:
    enabled: false
    ingress:
      - from:
          - ipBlock:
              cidr: 0.0.0.0/0
    egress:
      - ports:
          - port: 80
            protocol: TCP
          - port: 443
            protocol: TCP
          - port: 53
            protocol: TCP
          - port: 53
            protocol: UDP
          - port: 6443
            protocol: TCP
        to:
          - ipBlock:
              cidr: 0.0.0.0/0

  # Additional volumes to add to the cert-manager controller pod.
  volumes: []
  volumeMounts: []

  enableServiceLinks: false

# Create the CA Injector deployment
cainjector:
  enabled: true
  replicaCount: 1
  config: {}
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault
  containerSecurityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: true
  podDisruptionBudget:
    enabled: false
  featureGates: ""
  resources: {}
  nodeSelector:
    kubernetes.io/os: linux
  image:
    repository: quay.io/jetstack/cert-manager-cainjector
    pullPolicy: IfNotPresent
  serviceAccount:
    create: true
    automountServiceAccountToken: true
  enableServiceLinks: false

acmesolver:
  image:
    repository: quay.io/jetstack/cert-manager-acmesolver
    pullPolicy: IfNotPresent

startupapicheck:
  enabled: true
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault
  containerSecurityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: true
  timeout: 1m
  backoffLimit: 4
  jobAnnotations:
    helm.sh/hook: post-install
    helm.sh/hook-weight: "1"
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
  extraArgs:
    - -v
  resources: {}
  nodeSelector:
    kubernetes.io/os: linux
  image:
    repository: quay.io/jetstack/cert-manager-startupapicheck
    pullPolicy: IfNotPresent
  rbac:
    annotations:
      helm.sh/hook: post-install
      helm.sh/hook-weight: "-5"
      helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
  serviceAccount:
    create: true
    annotations:
      helm.sh/hook: post-install
      helm.sh/hook-weight: "-5"
      helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    automountServiceAccountToken: true
  enableServiceLinks: false