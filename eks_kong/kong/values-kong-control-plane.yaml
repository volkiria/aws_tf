# Do not use Kong Ingress Controller
ingressController:
  enabled: false

image:
  repository: kong/kong-gateway
  tag: "3.6.1.4"

# Mount the secret created earlier
secretVolumes:
  - kong-cluster-cert
#  - kong-cluster-cert-test

env:
  # This is a control_plane node
  role: control_plane
  # These certificates are used for control plane / data plane communication
  cluster_cert: /etc/secrets/kong-cluster-cert/tls.crt
  cluster_cert_key: /etc/secrets/kong-cluster-cert/tls.key
#  cluster_cert: /etc/secrets/kong-cluster-cert-test/tls.crt
#  cluster_cert_key: /etc/secrets/kong-cluster-cert-test/tls.key

  # Database
  # CHANGE THESE VALUES
  database: postgres
  pg_database: kong
  pg_user: kong
  pg_password: demo123
  pg_host: kong-control-plane-postgresql.kong.svc.cluster.local
#  pg_host: kong-control-plane-postgresql.test-kong.svc.cluster.local
  pg_ssl: "on"

  # Kong Manager password
  password: kong_admin_password

# DB
postgresql:
  enabled: true
  auth:
    password: demo123
  persistence:
    storageClass: "gp2"
    size: "8Gi"
# Enterprise functionality
enterprise:
  enabled: true
  license_secret: kong-enterprise-license

# The control plane serves the Admin API
admin:
  enabled: true
  http:
    enabled: true

# Clustering endpoints are required in hybrid mode
cluster:
  enabled: true
  tls:
    enabled: true

clustertelemetry:
  enabled: true
  tls:
    enabled: true

# Optional features
manager:
  enabled: false

# These roles will be served by different Helm releases
proxy:
  enabled: false